require 'optparse';

class Options;

	def initialize ##{{{
		@options = {};

		OptionParser.new do |parser|
		
			parser.on('-l','--lib [libFP]','get feature partition librarys') do
				|v|
				@options[:libfps] = [] unless @options.has_key?(:libfps);
				@options[:libfps] << v;
			end
		
			parser.on('-u','--userfile [filename]','get user files') do
				|v|
				@options[:userfiles] = [] unless @options.has_key?(:userfiles);
				@options[:userfiles] << v;
			end
		
			parser.on('-h','--help','display help message') do
				|v|
				if v==true
					puts parser;
					exit;
				end
			end
		
		end.parse!
	end ##}}}

	def get n ##{{{
		n = n.to_sym;
		if @options.has_key?(n)
			return @options[n];
		else
			return nil;
		end
	end ##}}}

end
